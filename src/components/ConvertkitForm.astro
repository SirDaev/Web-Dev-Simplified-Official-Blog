<script is:inline>
const queryParams = new URLSearchParams(window.location.search)
const form = document.querySelector(".formkit-sticky-bar")
const fromNewsletter = queryParams.get("fromNewsletter")

if (fromNewsletter === "true") {
  queryParams.delete("fromNewsletter")
  const stringifiedParams = queryParams.toString()
  history.replaceState(
    null,
    null,
    `${location.pathname}${stringifiedParams ? `?${queryParams.toString()}` : ""
    }${location.hash}`
  )
  localStorage.setItem("subscribed-to-newsletter", true)
}

if (fromNewsletter === "false") {
  queryParams.delete("fromNewsletter")
  const stringifiedParams = queryParams.toString()
  history.replaceState(
    null,
    null,
    `${location.pathname}${stringifiedParams ? `?${queryParams.toString()}` : ""
    }${location.hash}`
  )
  localStorage.removeItem("subscribed-to-newsletter")
  localStorage.removeItem("date-of-last-newsletter-link")
}

if (
  localStorage.getItem("subscribed-to-newsletter") === "true" &&
  localStorage.getItem("date-of-last-newsletter-link") == null
) {
  localStorage.setItem("date-of-last-newsletter-link", new Date())
}

function dateWithinLast30Days(date) {
  const today = new Date()
  const timeDiff = Math.abs(today.getTime() - date.getTime())
  const diffDays = timeDiff / (1000 * 3600 * 24)
  return diffDays <= 30
}
const dateStringOfLastNewsletterLink = localStorage.getItem(
  "date-of-last-newsletter-link"
)
if (
  dateStringOfLastNewsletterLink != null &&
  !dateWithinLast30Days(new Date(dateStringOfLastNewsletterLink))
) {
  localStorage.removeItem("subscribed-to-newsletter")
  localStorage.removeItem("date-of-last-newsletter-link")
}

if (
  form == null &&
  JSON.parse(localStorage.getItem("subscribed-to-newsletter")) !== true &&
  JSON.parse(sessionStorage.getItem("form-closed")) !== true
) {
  const script = document.createElement("script")
  script.src = "https://web-dev-simplified.ck.page/23989b36d2/index.js"
  script.async = true
  script.dataset.uid = "23989b36d2"

  const observer = new MutationObserver(entries => {
    entries.forEach(entry => {
      const formElem = [...entry.addedNodes].find(node => {
        if (node.matches == null) return
        return node.matches(".formkit-sticky-bar")
      })
      if (formElem == null) return

      formElem.addEventListener("transitionend", () => {
        if (
          formElem.dataset.active == null ||
          formElem.dataset.active === "false"
        ) {
          formElem.remove()
        }
      })

      document.body.prepend(formElem)
      observer.disconnect()
    })
  })

  observer.observe(document.body, { childList: true })

  document.body.append(script)
}

document.addEventListener("click", e => {
  if (e.target.matches("[data-formkit-close]")) {
    sessionStorage.setItem("form-closed", true)
  }
  })
</script>
